{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "report = pd.read_csv('TAO_2006.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# A1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(35136, 8)"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "report.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# A2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Maximum value of Precipitation is: 75.77\n",
      "Minimum value of Precipitation is: -9.99\n",
      "Maximum value of Air temperature is: 31.57\n",
      "Minimum value of Air temperature is: -99.9\n",
      "Maximum value of Sea surface is: 31.346\n",
      "Minimum value of Sea surface is: -99.9\n",
      "Maximum value of Relative humidity is: 98.1\n",
      "Minimum value of Relative humidity is: -99.9\n"
     ]
    }
   ],
   "source": [
    "print('Maximum value of Precipitation is: ' + str(report['PREC'].max()))\n",
    "print('Minimum value of Precipitation is: ' + str(report['PREC'].min()))\n",
    "print('Maximum value of Air temperature is: ' + str(report['AIRT'].max()))\n",
    "print('Minimum value of Air temperature is: ' + str(report['AIRT'].min()))\n",
    "print('Maximum value of Sea surface is: ' + str(report['SST'].max()))\n",
    "print('Minimum value of Sea surface is: ' + str(report['SST'].min()))\n",
    "print('Maximum value of Relative humidity is: ' + str(report['RH'].max()))\n",
    "print('Minimum value of Relative humidity is: ' + str(report['RH'].min()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "report['YYYYMMDD'] = report['YYYYMMDD'].apply(lambda x: pd.to_datetime(str(x), format='%Y%m%d'))\n",
    "report['Month']=report['YYYYMMDD'].dt.month"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# A3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The number of record of month 1 is 4464\n",
      "The number of record of month 2 is 4032\n",
      "The number of record of month 3 is 4464\n",
      "The number of record of month 4 is 4320\n",
      "The number of record of month 5 is 4464\n",
      "The number of record of month 6 is 4320\n",
      "The number of record of month 7 is 4464\n",
      "The number of record of month 8 is 4464\n",
      "The number of record of month 9 is 144\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Month</th>\n",
       "      <th>Timestamp</th>\n",
       "      <th>YYYYMMDD</th>\n",
       "      <th>HHMMSS</th>\n",
       "      <th>PREC</th>\n",
       "      <th>AIRT</th>\n",
       "      <th>SST</th>\n",
       "      <th>RH</th>\n",
       "      <th>Q</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>4032</td>\n",
       "      <td>4032</td>\n",
       "      <td>4032</td>\n",
       "      <td>4032</td>\n",
       "      <td>4032</td>\n",
       "      <td>4032</td>\n",
       "      <td>4032</td>\n",
       "      <td>4032</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Month  Timestamp  YYYYMMDD  HHMMSS  PREC  AIRT   SST    RH     Q\n",
       "8      9        144       144     144   144   144   144   144   144\n",
       "1      2       4032      4032    4032  4032  4032  4032  4032  4032"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "record = report.groupby('Month').count()\n",
    "record = record.reset_index()\n",
    "i = 1\n",
    "while i<10:\n",
    "    for each in record['Timestamp']:\n",
    "        print('The number of record of month '+ str(i) +' is ' + str(each))\n",
    "        i +=1\n",
    "sorted_record = record.sort_values(by = ['Timestamp'])\n",
    "sorted_record.head(2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# A4"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "    # A4.1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(401, 9)"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "filt2 = report.values == -9.990000\n",
    "new_frame1 = report[filt2]\n",
    "\n",
    "filt3 = report.values == -99.900000\n",
    "new_frame2 = report[filt3]\n",
    "missing_values = pd.concat([new_frame2, new_frame1]).drop_duplicates()\n",
    "\n",
    "missing_values.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "    # A4.2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Timestamp</th>\n",
       "      <th>YYYYMMDD</th>\n",
       "      <th>HHMMSS</th>\n",
       "      <th>PREC</th>\n",
       "      <th>AIRT</th>\n",
       "      <th>SST</th>\n",
       "      <th>RH</th>\n",
       "      <th>Q</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Month</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>243</td>\n",
       "      <td>243</td>\n",
       "      <td>243</td>\n",
       "      <td>243</td>\n",
       "      <td>243</td>\n",
       "      <td>243</td>\n",
       "      <td>243</td>\n",
       "      <td>243</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>141</td>\n",
       "      <td>141</td>\n",
       "      <td>141</td>\n",
       "      <td>141</td>\n",
       "      <td>141</td>\n",
       "      <td>141</td>\n",
       "      <td>141</td>\n",
       "      <td>141</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Timestamp  YYYYMMDD  HHMMSS  PREC  AIRT  SST   RH    Q\n",
       "Month                                                        \n",
       "1              3         3       3     3     3    3    3    3\n",
       "3              6         6       6     6     6    6    6    6\n",
       "4              3         3       3     3     3    3    3    3\n",
       "6              5         5       5     5     5    5    5    5\n",
       "7            243       243     243   243   243  243  243  243\n",
       "8            141       141     141   141   141  141  141  141"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "missingMonths = missing_values.groupby('Month').count()\n",
    "missingMonths"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "    # A4.3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Timestamp</th>\n",
       "      <th>YYYYMMDD</th>\n",
       "      <th>HHMMSS</th>\n",
       "      <th>PREC</th>\n",
       "      <th>AIRT</th>\n",
       "      <th>SST</th>\n",
       "      <th>RH</th>\n",
       "      <th>Q</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.17</td>\n",
       "      <td>28.75</td>\n",
       "      <td>29.690</td>\n",
       "      <td>79.8</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>1000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.86</td>\n",
       "      <td>29.708</td>\n",
       "      <td>79.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>2000</td>\n",
       "      <td>-0.02</td>\n",
       "      <td>28.91</td>\n",
       "      <td>29.749</td>\n",
       "      <td>79.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>3000</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.85</td>\n",
       "      <td>29.757</td>\n",
       "      <td>78.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>4000</td>\n",
       "      <td>-0.02</td>\n",
       "      <td>28.87</td>\n",
       "      <td>29.787</td>\n",
       "      <td>77.8</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>5000</td>\n",
       "      <td>-0.04</td>\n",
       "      <td>28.71</td>\n",
       "      <td>29.793</td>\n",
       "      <td>78.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>10000</td>\n",
       "      <td>-0.02</td>\n",
       "      <td>28.66</td>\n",
       "      <td>29.803</td>\n",
       "      <td>77.5</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>11000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>28.64</td>\n",
       "      <td>29.815</td>\n",
       "      <td>77.5</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>12000</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.64</td>\n",
       "      <td>29.788</td>\n",
       "      <td>78.3</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>13000</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.63</td>\n",
       "      <td>29.760</td>\n",
       "      <td>79.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>10</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>14000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.74</td>\n",
       "      <td>29.786</td>\n",
       "      <td>79.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>11</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>15000</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.50</td>\n",
       "      <td>29.783</td>\n",
       "      <td>81.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>20000</td>\n",
       "      <td>-0.03</td>\n",
       "      <td>28.08</td>\n",
       "      <td>29.782</td>\n",
       "      <td>81.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>13</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>21000</td>\n",
       "      <td>-0.02</td>\n",
       "      <td>28.24</td>\n",
       "      <td>29.748</td>\n",
       "      <td>81.3</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>14</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>22000</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.39</td>\n",
       "      <td>29.747</td>\n",
       "      <td>79.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>15</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>23000</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.56</td>\n",
       "      <td>29.806</td>\n",
       "      <td>78.5</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>16</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>24000</td>\n",
       "      <td>-0.03</td>\n",
       "      <td>28.76</td>\n",
       "      <td>29.805</td>\n",
       "      <td>78.8</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>17</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>25000</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.70</td>\n",
       "      <td>29.861</td>\n",
       "      <td>78.7</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>18</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>30000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.75</td>\n",
       "      <td>29.885</td>\n",
       "      <td>78.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>19</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>31000</td>\n",
       "      <td>-0.03</td>\n",
       "      <td>28.82</td>\n",
       "      <td>29.844</td>\n",
       "      <td>78.9</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>20</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>32000</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.79</td>\n",
       "      <td>29.842</td>\n",
       "      <td>78.5</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>21</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>33000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.80</td>\n",
       "      <td>29.866</td>\n",
       "      <td>79.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>22</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>34000</td>\n",
       "      <td>-0.02</td>\n",
       "      <td>28.75</td>\n",
       "      <td>29.882</td>\n",
       "      <td>80.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>23</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>35000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.61</td>\n",
       "      <td>29.901</td>\n",
       "      <td>78.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>24</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>40000</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.75</td>\n",
       "      <td>29.902</td>\n",
       "      <td>78.5</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>25</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>41000</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.74</td>\n",
       "      <td>29.829</td>\n",
       "      <td>76.8</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>26</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>42000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>28.89</td>\n",
       "      <td>29.826</td>\n",
       "      <td>77.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>27</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>43000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.91</td>\n",
       "      <td>29.774</td>\n",
       "      <td>78.3</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>28</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>44000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.89</td>\n",
       "      <td>29.832</td>\n",
       "      <td>78.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>29</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>45000</td>\n",
       "      <td>-0.02</td>\n",
       "      <td>28.94</td>\n",
       "      <td>29.803</td>\n",
       "      <td>77.7</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35106</th>\n",
       "      <td>35106</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>190000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>28.68</td>\n",
       "      <td>29.585</td>\n",
       "      <td>77.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35107</th>\n",
       "      <td>35107</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>191000</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.70</td>\n",
       "      <td>29.571</td>\n",
       "      <td>77.9</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35108</th>\n",
       "      <td>35108</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>192000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>28.76</td>\n",
       "      <td>29.569</td>\n",
       "      <td>76.7</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35109</th>\n",
       "      <td>35109</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>193000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.86</td>\n",
       "      <td>29.574</td>\n",
       "      <td>76.0</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35110</th>\n",
       "      <td>35110</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>194000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>28.98</td>\n",
       "      <td>29.564</td>\n",
       "      <td>76.1</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35111</th>\n",
       "      <td>35111</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>195000</td>\n",
       "      <td>0.03</td>\n",
       "      <td>29.26</td>\n",
       "      <td>29.555</td>\n",
       "      <td>73.8</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35112</th>\n",
       "      <td>35112</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>200000</td>\n",
       "      <td>0.05</td>\n",
       "      <td>29.29</td>\n",
       "      <td>29.555</td>\n",
       "      <td>74.9</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35113</th>\n",
       "      <td>35113</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>201000</td>\n",
       "      <td>0.55</td>\n",
       "      <td>29.51</td>\n",
       "      <td>29.553</td>\n",
       "      <td>74.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35114</th>\n",
       "      <td>35114</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>202000</td>\n",
       "      <td>-0.10</td>\n",
       "      <td>29.39</td>\n",
       "      <td>29.546</td>\n",
       "      <td>74.5</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35115</th>\n",
       "      <td>35115</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>203000</td>\n",
       "      <td>-0.39</td>\n",
       "      <td>29.26</td>\n",
       "      <td>29.543</td>\n",
       "      <td>74.0</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35116</th>\n",
       "      <td>35116</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>204000</td>\n",
       "      <td>-0.28</td>\n",
       "      <td>29.10</td>\n",
       "      <td>29.545</td>\n",
       "      <td>76.0</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35117</th>\n",
       "      <td>35117</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>205000</td>\n",
       "      <td>1.31</td>\n",
       "      <td>29.15</td>\n",
       "      <td>29.541</td>\n",
       "      <td>73.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35118</th>\n",
       "      <td>35118</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>210000</td>\n",
       "      <td>0.29</td>\n",
       "      <td>29.46</td>\n",
       "      <td>29.548</td>\n",
       "      <td>73.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35119</th>\n",
       "      <td>35119</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>211000</td>\n",
       "      <td>-1.22</td>\n",
       "      <td>29.47</td>\n",
       "      <td>29.547</td>\n",
       "      <td>74.1</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35120</th>\n",
       "      <td>35120</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>212000</td>\n",
       "      <td>-0.35</td>\n",
       "      <td>29.38</td>\n",
       "      <td>29.548</td>\n",
       "      <td>72.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35121</th>\n",
       "      <td>35121</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>213000</td>\n",
       "      <td>-0.14</td>\n",
       "      <td>29.41</td>\n",
       "      <td>29.557</td>\n",
       "      <td>71.8</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35122</th>\n",
       "      <td>35122</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>214000</td>\n",
       "      <td>0.56</td>\n",
       "      <td>29.34</td>\n",
       "      <td>29.571</td>\n",
       "      <td>71.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35123</th>\n",
       "      <td>35123</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>215000</td>\n",
       "      <td>-0.47</td>\n",
       "      <td>29.38</td>\n",
       "      <td>29.585</td>\n",
       "      <td>72.1</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35124</th>\n",
       "      <td>35124</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>220000</td>\n",
       "      <td>0.75</td>\n",
       "      <td>29.35</td>\n",
       "      <td>29.586</td>\n",
       "      <td>72.8</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35125</th>\n",
       "      <td>35125</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>221000</td>\n",
       "      <td>-1.03</td>\n",
       "      <td>29.28</td>\n",
       "      <td>29.592</td>\n",
       "      <td>74.0</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35126</th>\n",
       "      <td>35126</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>222000</td>\n",
       "      <td>0.72</td>\n",
       "      <td>29.25</td>\n",
       "      <td>29.630</td>\n",
       "      <td>72.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35127</th>\n",
       "      <td>35127</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>223000</td>\n",
       "      <td>-0.58</td>\n",
       "      <td>29.32</td>\n",
       "      <td>29.660</td>\n",
       "      <td>72.7</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35128</th>\n",
       "      <td>35128</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>224000</td>\n",
       "      <td>-0.24</td>\n",
       "      <td>29.23</td>\n",
       "      <td>29.636</td>\n",
       "      <td>74.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35129</th>\n",
       "      <td>35129</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>225000</td>\n",
       "      <td>0.04</td>\n",
       "      <td>29.24</td>\n",
       "      <td>29.669</td>\n",
       "      <td>73.9</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35130</th>\n",
       "      <td>35130</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>230000</td>\n",
       "      <td>0.23</td>\n",
       "      <td>29.32</td>\n",
       "      <td>29.687</td>\n",
       "      <td>74.5</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35131</th>\n",
       "      <td>35131</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>231000</td>\n",
       "      <td>0.40</td>\n",
       "      <td>29.20</td>\n",
       "      <td>29.680</td>\n",
       "      <td>75.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35132</th>\n",
       "      <td>35132</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>232000</td>\n",
       "      <td>-0.61</td>\n",
       "      <td>29.25</td>\n",
       "      <td>29.686</td>\n",
       "      <td>75.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35133</th>\n",
       "      <td>35133</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>233000</td>\n",
       "      <td>-0.11</td>\n",
       "      <td>29.15</td>\n",
       "      <td>29.697</td>\n",
       "      <td>75.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35134</th>\n",
       "      <td>35134</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>234000</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>29.18</td>\n",
       "      <td>29.704</td>\n",
       "      <td>74.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35135</th>\n",
       "      <td>35135</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>235000</td>\n",
       "      <td>0.12</td>\n",
       "      <td>29.20</td>\n",
       "      <td>29.718</td>\n",
       "      <td>74.9</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>34735 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Timestamp   YYYYMMDD  HHMMSS  PREC   AIRT     SST    RH      Q  Month\n",
       "0              0 2006-01-01       0 -0.17  28.75  29.690  79.8  HighQ      1\n",
       "1              1 2006-01-01    1000  0.00  28.86  29.708  79.2  HighQ      1\n",
       "2              2 2006-01-01    2000 -0.02  28.91  29.749  79.4  HighQ      1\n",
       "3              3 2006-01-01    3000 -0.01  28.85  29.757  78.4  HighQ      1\n",
       "4              4 2006-01-01    4000 -0.02  28.87  29.787  77.8  HighQ      1\n",
       "5              5 2006-01-01    5000 -0.04  28.71  29.793  78.2  HighQ      1\n",
       "6              6 2006-01-01   10000 -0.02  28.66  29.803  77.5  HighQ      1\n",
       "7              7 2006-01-01   11000  0.01  28.64  29.815  77.5  HighQ      1\n",
       "8              8 2006-01-01   12000 -0.01  28.64  29.788  78.3  HighQ      1\n",
       "9              9 2006-01-01   13000 -0.01  28.63  29.760  79.6  HighQ      1\n",
       "10            10 2006-01-01   14000  0.00  28.74  29.786  79.6  HighQ      1\n",
       "11            11 2006-01-01   15000 -0.01  28.50  29.783  81.4  HighQ      1\n",
       "12            12 2006-01-01   20000 -0.03  28.08  29.782  81.6  HighQ      1\n",
       "13            13 2006-01-01   21000 -0.02  28.24  29.748  81.3  HighQ      1\n",
       "14            14 2006-01-01   22000 -0.01  28.39  29.747  79.6  HighQ      1\n",
       "15            15 2006-01-01   23000 -0.01  28.56  29.806  78.5  HighQ      1\n",
       "16            16 2006-01-01   24000 -0.03  28.76  29.805  78.8  HighQ      1\n",
       "17            17 2006-01-01   25000 -0.01  28.70  29.861  78.7  HighQ      1\n",
       "18            18 2006-01-01   30000  0.00  28.75  29.885  78.6  HighQ      1\n",
       "19            19 2006-01-01   31000 -0.03  28.82  29.844  78.9  HighQ      1\n",
       "20            20 2006-01-01   32000 -0.01  28.79  29.842  78.5  HighQ      1\n",
       "21            21 2006-01-01   33000  0.00  28.80  29.866  79.4  HighQ      1\n",
       "22            22 2006-01-01   34000 -0.02  28.75  29.882  80.4  HighQ      1\n",
       "23            23 2006-01-01   35000  0.00  28.61  29.901  78.2  HighQ      1\n",
       "24            24 2006-01-01   40000 -0.01  28.75  29.902  78.5  HighQ      1\n",
       "25            25 2006-01-01   41000 -0.01  28.74  29.829  76.8  HighQ      1\n",
       "26            26 2006-01-01   42000  0.01  28.89  29.826  77.4  HighQ      1\n",
       "27            27 2006-01-01   43000  0.00  28.91  29.774  78.3  HighQ      1\n",
       "28            28 2006-01-01   44000  0.00  28.89  29.832  78.6  HighQ      1\n",
       "29            29 2006-01-01   45000 -0.02  28.94  29.803  77.7  HighQ      1\n",
       "...          ...        ...     ...   ...    ...     ...   ...    ...    ...\n",
       "35106      35106 2006-09-01  190000  0.01  28.68  29.585  77.2  HighQ      9\n",
       "35107      35107 2006-09-01  191000 -0.01  28.70  29.571  77.9  HighQ      9\n",
       "35108      35108 2006-09-01  192000  0.01  28.76  29.569  76.7  HighQ      9\n",
       "35109      35109 2006-09-01  193000  0.00  28.86  29.574  76.0  HighQ      9\n",
       "35110      35110 2006-09-01  194000  0.01  28.98  29.564  76.1  HighQ      9\n",
       "35111      35111 2006-09-01  195000  0.03  29.26  29.555  73.8  HighQ      9\n",
       "35112      35112 2006-09-01  200000  0.05  29.29  29.555  74.9  HighQ      9\n",
       "35113      35113 2006-09-01  201000  0.55  29.51  29.553  74.2  HighQ      9\n",
       "35114      35114 2006-09-01  202000 -0.10  29.39  29.546  74.5  HighQ      9\n",
       "35115      35115 2006-09-01  203000 -0.39  29.26  29.543  74.0  HighQ      9\n",
       "35116      35116 2006-09-01  204000 -0.28  29.10  29.545  76.0  HighQ      9\n",
       "35117      35117 2006-09-01  205000  1.31  29.15  29.541  73.4  HighQ      9\n",
       "35118      35118 2006-09-01  210000  0.29  29.46  29.548  73.6  HighQ      9\n",
       "35119      35119 2006-09-01  211000 -1.22  29.47  29.547  74.1  HighQ      9\n",
       "35120      35120 2006-09-01  212000 -0.35  29.38  29.548  72.2  HighQ      9\n",
       "35121      35121 2006-09-01  213000 -0.14  29.41  29.557  71.8  HighQ      9\n",
       "35122      35122 2006-09-01  214000  0.56  29.34  29.571  71.2  HighQ      9\n",
       "35123      35123 2006-09-01  215000 -0.47  29.38  29.585  72.1  HighQ      9\n",
       "35124      35124 2006-09-01  220000  0.75  29.35  29.586  72.8  HighQ      9\n",
       "35125      35125 2006-09-01  221000 -1.03  29.28  29.592  74.0  HighQ      9\n",
       "35126      35126 2006-09-01  222000  0.72  29.25  29.630  72.4  HighQ      9\n",
       "35127      35127 2006-09-01  223000 -0.58  29.32  29.660  72.7  HighQ      9\n",
       "35128      35128 2006-09-01  224000 -0.24  29.23  29.636  74.6  HighQ      9\n",
       "35129      35129 2006-09-01  225000  0.04  29.24  29.669  73.9  HighQ      9\n",
       "35130      35130 2006-09-01  230000  0.23  29.32  29.687  74.5  HighQ      9\n",
       "35131      35131 2006-09-01  231000  0.40  29.20  29.680  75.6  HighQ      9\n",
       "35132      35132 2006-09-01  232000 -0.61  29.25  29.686  75.4  HighQ      9\n",
       "35133      35133 2006-09-01  233000 -0.11  29.15  29.697  75.2  HighQ      9\n",
       "35134      35134 2006-09-01  234000 -0.01  29.18  29.704  74.2  HighQ      9\n",
       "35135      35135 2006-09-01  235000  0.12  29.20  29.718  74.9  HighQ      9\n",
       "\n",
       "[34735 rows x 9 columns]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final = pd.concat([report, missing_values]).drop_duplicates(keep=False)\n",
    "final"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# A5"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "    # A5.1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a25a689b0>"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "final.boxplot(column = 'SST', by = 'Month')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "    # A5.2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Timestamp</th>\n",
       "      <th>HHMMSS</th>\n",
       "      <th>PREC</th>\n",
       "      <th>AIRT</th>\n",
       "      <th>SST</th>\n",
       "      <th>RH</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Month</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>6479.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.250</td>\n",
       "      <td>28.484</td>\n",
       "      <td>82.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>15118.0</td>\n",
       "      <td>115000.0</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.100</td>\n",
       "      <td>28.862</td>\n",
       "      <td>83.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10724.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.330</td>\n",
       "      <td>28.979</td>\n",
       "      <td>80.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2233.0</td>\n",
       "      <td>115000.0</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.790</td>\n",
       "      <td>29.334</td>\n",
       "      <td>79.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>19511.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.620</td>\n",
       "      <td>29.497</td>\n",
       "      <td>79.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>32691.0</td>\n",
       "      <td>121000.0</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.530</td>\n",
       "      <td>29.698</td>\n",
       "      <td>78.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>35063.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.985</td>\n",
       "      <td>29.822</td>\n",
       "      <td>73.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>28408.0</td>\n",
       "      <td>121000.0</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.410</td>\n",
       "      <td>29.877</td>\n",
       "      <td>78.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>23903.0</td>\n",
       "      <td>115000.0</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.990</td>\n",
       "      <td>30.013</td>\n",
       "      <td>78.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Timestamp    HHMMSS  PREC    AIRT     SST    RH\n",
       "Month                                                 \n",
       "2         6479.5  117500.0 -0.01  28.250  28.484  82.8\n",
       "4        15118.0  115000.0 -0.01  28.100  28.862  83.5\n",
       "3        10724.5  117500.0 -0.01  28.330  28.979  80.3\n",
       "1         2233.0  115000.0 -0.01  28.790  29.334  79.0\n",
       "5        19511.5  117500.0 -0.01  28.620  29.497  79.5\n",
       "8        32691.0  121000.0 -0.01  28.530  29.698  78.6\n",
       "9        35063.5  117500.0  0.00  28.985  29.822  73.6\n",
       "7        28408.0  121000.0 -0.01  28.410  29.877  78.7\n",
       "6        23903.0  115000.0 -0.01  28.990  30.013  78.0"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "seaMedian = final.groupby('Month').median()\n",
    "sortByMedian = seaMedian.sort_values('SST')\n",
    "sortByMedian"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "    # A5.3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Month</th>\n",
       "      <th>Timestamp</th>\n",
       "      <th>HHMMSS</th>\n",
       "      <th>PREC</th>\n",
       "      <th>AIRT</th>\n",
       "      <th>SST</th>\n",
       "      <th>RH</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>6</td>\n",
       "      <td>23903.0</td>\n",
       "      <td>115000.0</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.99</td>\n",
       "      <td>30.013</td>\n",
       "      <td>78.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Month  Timestamp    HHMMSS  PREC   AIRT     SST    RH\n",
       "0      6    23903.0  115000.0 -0.01  28.99  30.013  78.0"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "maxSST = sortByMedian['SST'] == sortByMedian['SST'].max()\n",
    "minSST = sortByMedian['SST'] == sortByMedian['SST'].min()\n",
    "sortByMedian[maxSST].reset_index()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Month</th>\n",
       "      <th>Timestamp</th>\n",
       "      <th>HHMMSS</th>\n",
       "      <th>PREC</th>\n",
       "      <th>AIRT</th>\n",
       "      <th>SST</th>\n",
       "      <th>RH</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>6479.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>-0.01</td>\n",
       "      <td>28.25</td>\n",
       "      <td>28.484</td>\n",
       "      <td>82.8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Month  Timestamp    HHMMSS  PREC   AIRT     SST    RH\n",
       "0      2     6479.5  117500.0 -0.01  28.25  28.484  82.8"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sortByMedian[minSST].reset_index()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# A6"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "    # A6.1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(final['Timestamp'], final['PREC'])\n",
    "plt.xlabel('Timestamp')\n",
    "plt.ylabel('Rain precitipation')\n",
    "plt.title('Rain rate over timestamp')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Timestamp</th>\n",
       "      <th>YYYYMMDD</th>\n",
       "      <th>HHMMSS</th>\n",
       "      <th>PREC</th>\n",
       "      <th>AIRT</th>\n",
       "      <th>SST</th>\n",
       "      <th>RH</th>\n",
       "      <th>Q</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.75</td>\n",
       "      <td>29.690</td>\n",
       "      <td>79.8</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>1000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.86</td>\n",
       "      <td>29.708</td>\n",
       "      <td>79.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>2000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.91</td>\n",
       "      <td>29.749</td>\n",
       "      <td>79.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>3000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.85</td>\n",
       "      <td>29.757</td>\n",
       "      <td>78.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>4000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.87</td>\n",
       "      <td>29.787</td>\n",
       "      <td>77.8</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>5000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.71</td>\n",
       "      <td>29.793</td>\n",
       "      <td>78.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>10000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.66</td>\n",
       "      <td>29.803</td>\n",
       "      <td>77.5</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>11000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>28.64</td>\n",
       "      <td>29.815</td>\n",
       "      <td>77.5</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>12000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.64</td>\n",
       "      <td>29.788</td>\n",
       "      <td>78.3</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>13000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.63</td>\n",
       "      <td>29.760</td>\n",
       "      <td>79.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>10</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>14000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.74</td>\n",
       "      <td>29.786</td>\n",
       "      <td>79.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>11</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>15000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.50</td>\n",
       "      <td>29.783</td>\n",
       "      <td>81.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>20000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.08</td>\n",
       "      <td>29.782</td>\n",
       "      <td>81.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>13</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>21000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.24</td>\n",
       "      <td>29.748</td>\n",
       "      <td>81.3</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>14</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>22000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.39</td>\n",
       "      <td>29.747</td>\n",
       "      <td>79.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>15</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>23000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.56</td>\n",
       "      <td>29.806</td>\n",
       "      <td>78.5</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>16</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>24000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.76</td>\n",
       "      <td>29.805</td>\n",
       "      <td>78.8</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>17</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>25000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.70</td>\n",
       "      <td>29.861</td>\n",
       "      <td>78.7</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>18</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>30000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.75</td>\n",
       "      <td>29.885</td>\n",
       "      <td>78.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>19</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>31000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.82</td>\n",
       "      <td>29.844</td>\n",
       "      <td>78.9</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>20</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>32000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.79</td>\n",
       "      <td>29.842</td>\n",
       "      <td>78.5</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>21</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>33000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.80</td>\n",
       "      <td>29.866</td>\n",
       "      <td>79.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>22</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>34000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.75</td>\n",
       "      <td>29.882</td>\n",
       "      <td>80.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>23</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>35000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.61</td>\n",
       "      <td>29.901</td>\n",
       "      <td>78.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>24</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>40000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.75</td>\n",
       "      <td>29.902</td>\n",
       "      <td>78.5</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>25</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>41000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.74</td>\n",
       "      <td>29.829</td>\n",
       "      <td>76.8</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>26</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>42000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>28.89</td>\n",
       "      <td>29.826</td>\n",
       "      <td>77.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>27</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>43000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.91</td>\n",
       "      <td>29.774</td>\n",
       "      <td>78.3</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>28</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>44000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.89</td>\n",
       "      <td>29.832</td>\n",
       "      <td>78.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>29</td>\n",
       "      <td>2006-01-01</td>\n",
       "      <td>45000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.94</td>\n",
       "      <td>29.803</td>\n",
       "      <td>77.7</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35106</th>\n",
       "      <td>35106</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>190000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>28.68</td>\n",
       "      <td>29.585</td>\n",
       "      <td>77.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35107</th>\n",
       "      <td>35107</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>191000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.70</td>\n",
       "      <td>29.571</td>\n",
       "      <td>77.9</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35108</th>\n",
       "      <td>35108</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>192000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>28.76</td>\n",
       "      <td>29.569</td>\n",
       "      <td>76.7</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35109</th>\n",
       "      <td>35109</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>193000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>28.86</td>\n",
       "      <td>29.574</td>\n",
       "      <td>76.0</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35110</th>\n",
       "      <td>35110</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>194000</td>\n",
       "      <td>0.01</td>\n",
       "      <td>28.98</td>\n",
       "      <td>29.564</td>\n",
       "      <td>76.1</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35111</th>\n",
       "      <td>35111</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>195000</td>\n",
       "      <td>0.03</td>\n",
       "      <td>29.26</td>\n",
       "      <td>29.555</td>\n",
       "      <td>73.8</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35112</th>\n",
       "      <td>35112</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>200000</td>\n",
       "      <td>0.05</td>\n",
       "      <td>29.29</td>\n",
       "      <td>29.555</td>\n",
       "      <td>74.9</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35113</th>\n",
       "      <td>35113</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>201000</td>\n",
       "      <td>0.55</td>\n",
       "      <td>29.51</td>\n",
       "      <td>29.553</td>\n",
       "      <td>74.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35114</th>\n",
       "      <td>35114</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>202000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>29.39</td>\n",
       "      <td>29.546</td>\n",
       "      <td>74.5</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35115</th>\n",
       "      <td>35115</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>203000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>29.26</td>\n",
       "      <td>29.543</td>\n",
       "      <td>74.0</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35116</th>\n",
       "      <td>35116</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>204000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>29.10</td>\n",
       "      <td>29.545</td>\n",
       "      <td>76.0</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35117</th>\n",
       "      <td>35117</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>205000</td>\n",
       "      <td>1.31</td>\n",
       "      <td>29.15</td>\n",
       "      <td>29.541</td>\n",
       "      <td>73.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35118</th>\n",
       "      <td>35118</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>210000</td>\n",
       "      <td>0.29</td>\n",
       "      <td>29.46</td>\n",
       "      <td>29.548</td>\n",
       "      <td>73.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35119</th>\n",
       "      <td>35119</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>211000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>29.47</td>\n",
       "      <td>29.547</td>\n",
       "      <td>74.1</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35120</th>\n",
       "      <td>35120</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>212000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>29.38</td>\n",
       "      <td>29.548</td>\n",
       "      <td>72.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35121</th>\n",
       "      <td>35121</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>213000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>29.41</td>\n",
       "      <td>29.557</td>\n",
       "      <td>71.8</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35122</th>\n",
       "      <td>35122</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>214000</td>\n",
       "      <td>0.56</td>\n",
       "      <td>29.34</td>\n",
       "      <td>29.571</td>\n",
       "      <td>71.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35123</th>\n",
       "      <td>35123</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>215000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>29.38</td>\n",
       "      <td>29.585</td>\n",
       "      <td>72.1</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35124</th>\n",
       "      <td>35124</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>220000</td>\n",
       "      <td>0.75</td>\n",
       "      <td>29.35</td>\n",
       "      <td>29.586</td>\n",
       "      <td>72.8</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35125</th>\n",
       "      <td>35125</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>221000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>29.28</td>\n",
       "      <td>29.592</td>\n",
       "      <td>74.0</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35126</th>\n",
       "      <td>35126</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>222000</td>\n",
       "      <td>0.72</td>\n",
       "      <td>29.25</td>\n",
       "      <td>29.630</td>\n",
       "      <td>72.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35127</th>\n",
       "      <td>35127</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>223000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>29.32</td>\n",
       "      <td>29.660</td>\n",
       "      <td>72.7</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35128</th>\n",
       "      <td>35128</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>224000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>29.23</td>\n",
       "      <td>29.636</td>\n",
       "      <td>74.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35129</th>\n",
       "      <td>35129</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>225000</td>\n",
       "      <td>0.04</td>\n",
       "      <td>29.24</td>\n",
       "      <td>29.669</td>\n",
       "      <td>73.9</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35130</th>\n",
       "      <td>35130</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>230000</td>\n",
       "      <td>0.23</td>\n",
       "      <td>29.32</td>\n",
       "      <td>29.687</td>\n",
       "      <td>74.5</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35131</th>\n",
       "      <td>35131</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>231000</td>\n",
       "      <td>0.40</td>\n",
       "      <td>29.20</td>\n",
       "      <td>29.680</td>\n",
       "      <td>75.6</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35132</th>\n",
       "      <td>35132</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>232000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>29.25</td>\n",
       "      <td>29.686</td>\n",
       "      <td>75.4</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35133</th>\n",
       "      <td>35133</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>233000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>29.15</td>\n",
       "      <td>29.697</td>\n",
       "      <td>75.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35134</th>\n",
       "      <td>35134</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>234000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>29.18</td>\n",
       "      <td>29.704</td>\n",
       "      <td>74.2</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35135</th>\n",
       "      <td>35135</td>\n",
       "      <td>2006-09-01</td>\n",
       "      <td>235000</td>\n",
       "      <td>0.12</td>\n",
       "      <td>29.20</td>\n",
       "      <td>29.718</td>\n",
       "      <td>74.9</td>\n",
       "      <td>HighQ</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>34735 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Timestamp   YYYYMMDD  HHMMSS  PREC   AIRT     SST    RH      Q  Month\n",
       "0              0 2006-01-01       0  0.00  28.75  29.690  79.8  HighQ      1\n",
       "1              1 2006-01-01    1000  0.00  28.86  29.708  79.2  HighQ      1\n",
       "2              2 2006-01-01    2000  0.00  28.91  29.749  79.4  HighQ      1\n",
       "3              3 2006-01-01    3000  0.00  28.85  29.757  78.4  HighQ      1\n",
       "4              4 2006-01-01    4000  0.00  28.87  29.787  77.8  HighQ      1\n",
       "5              5 2006-01-01    5000  0.00  28.71  29.793  78.2  HighQ      1\n",
       "6              6 2006-01-01   10000  0.00  28.66  29.803  77.5  HighQ      1\n",
       "7              7 2006-01-01   11000  0.01  28.64  29.815  77.5  HighQ      1\n",
       "8              8 2006-01-01   12000  0.00  28.64  29.788  78.3  HighQ      1\n",
       "9              9 2006-01-01   13000  0.00  28.63  29.760  79.6  HighQ      1\n",
       "10            10 2006-01-01   14000  0.00  28.74  29.786  79.6  HighQ      1\n",
       "11            11 2006-01-01   15000  0.00  28.50  29.783  81.4  HighQ      1\n",
       "12            12 2006-01-01   20000  0.00  28.08  29.782  81.6  HighQ      1\n",
       "13            13 2006-01-01   21000  0.00  28.24  29.748  81.3  HighQ      1\n",
       "14            14 2006-01-01   22000  0.00  28.39  29.747  79.6  HighQ      1\n",
       "15            15 2006-01-01   23000  0.00  28.56  29.806  78.5  HighQ      1\n",
       "16            16 2006-01-01   24000  0.00  28.76  29.805  78.8  HighQ      1\n",
       "17            17 2006-01-01   25000  0.00  28.70  29.861  78.7  HighQ      1\n",
       "18            18 2006-01-01   30000  0.00  28.75  29.885  78.6  HighQ      1\n",
       "19            19 2006-01-01   31000  0.00  28.82  29.844  78.9  HighQ      1\n",
       "20            20 2006-01-01   32000  0.00  28.79  29.842  78.5  HighQ      1\n",
       "21            21 2006-01-01   33000  0.00  28.80  29.866  79.4  HighQ      1\n",
       "22            22 2006-01-01   34000  0.00  28.75  29.882  80.4  HighQ      1\n",
       "23            23 2006-01-01   35000  0.00  28.61  29.901  78.2  HighQ      1\n",
       "24            24 2006-01-01   40000  0.00  28.75  29.902  78.5  HighQ      1\n",
       "25            25 2006-01-01   41000  0.00  28.74  29.829  76.8  HighQ      1\n",
       "26            26 2006-01-01   42000  0.01  28.89  29.826  77.4  HighQ      1\n",
       "27            27 2006-01-01   43000  0.00  28.91  29.774  78.3  HighQ      1\n",
       "28            28 2006-01-01   44000  0.00  28.89  29.832  78.6  HighQ      1\n",
       "29            29 2006-01-01   45000  0.00  28.94  29.803  77.7  HighQ      1\n",
       "...          ...        ...     ...   ...    ...     ...   ...    ...    ...\n",
       "35106      35106 2006-09-01  190000  0.01  28.68  29.585  77.2  HighQ      9\n",
       "35107      35107 2006-09-01  191000  0.00  28.70  29.571  77.9  HighQ      9\n",
       "35108      35108 2006-09-01  192000  0.01  28.76  29.569  76.7  HighQ      9\n",
       "35109      35109 2006-09-01  193000  0.00  28.86  29.574  76.0  HighQ      9\n",
       "35110      35110 2006-09-01  194000  0.01  28.98  29.564  76.1  HighQ      9\n",
       "35111      35111 2006-09-01  195000  0.03  29.26  29.555  73.8  HighQ      9\n",
       "35112      35112 2006-09-01  200000  0.05  29.29  29.555  74.9  HighQ      9\n",
       "35113      35113 2006-09-01  201000  0.55  29.51  29.553  74.2  HighQ      9\n",
       "35114      35114 2006-09-01  202000  0.00  29.39  29.546  74.5  HighQ      9\n",
       "35115      35115 2006-09-01  203000  0.00  29.26  29.543  74.0  HighQ      9\n",
       "35116      35116 2006-09-01  204000  0.00  29.10  29.545  76.0  HighQ      9\n",
       "35117      35117 2006-09-01  205000  1.31  29.15  29.541  73.4  HighQ      9\n",
       "35118      35118 2006-09-01  210000  0.29  29.46  29.548  73.6  HighQ      9\n",
       "35119      35119 2006-09-01  211000  0.00  29.47  29.547  74.1  HighQ      9\n",
       "35120      35120 2006-09-01  212000  0.00  29.38  29.548  72.2  HighQ      9\n",
       "35121      35121 2006-09-01  213000  0.00  29.41  29.557  71.8  HighQ      9\n",
       "35122      35122 2006-09-01  214000  0.56  29.34  29.571  71.2  HighQ      9\n",
       "35123      35123 2006-09-01  215000  0.00  29.38  29.585  72.1  HighQ      9\n",
       "35124      35124 2006-09-01  220000  0.75  29.35  29.586  72.8  HighQ      9\n",
       "35125      35125 2006-09-01  221000  0.00  29.28  29.592  74.0  HighQ      9\n",
       "35126      35126 2006-09-01  222000  0.72  29.25  29.630  72.4  HighQ      9\n",
       "35127      35127 2006-09-01  223000  0.00  29.32  29.660  72.7  HighQ      9\n",
       "35128      35128 2006-09-01  224000  0.00  29.23  29.636  74.6  HighQ      9\n",
       "35129      35129 2006-09-01  225000  0.04  29.24  29.669  73.9  HighQ      9\n",
       "35130      35130 2006-09-01  230000  0.23  29.32  29.687  74.5  HighQ      9\n",
       "35131      35131 2006-09-01  231000  0.40  29.20  29.680  75.6  HighQ      9\n",
       "35132      35132 2006-09-01  232000  0.00  29.25  29.686  75.4  HighQ      9\n",
       "35133      35133 2006-09-01  233000  0.00  29.15  29.697  75.2  HighQ      9\n",
       "35134      35134 2006-09-01  234000  0.00  29.18  29.704  74.2  HighQ      9\n",
       "35135      35135 2006-09-01  235000  0.12  29.20  29.718  74.9  HighQ      9\n",
       "\n",
       "[34735 rows x 9 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final.loc[(final['PREC'] < 0), 'PREC'] = 0\n",
    "final"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# A7"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "    # A7.1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pairwise correlation between PREC and AIRT is: -0.30351271242727007\n",
      "Pairwise correlation between AIRT and SST is: 0.3661185462421808\n",
      "Pairwise correlation between PREC and SST is: -0.03485242673000577\n"
     ]
    }
   ],
   "source": [
    "correlation1 = final['PREC'].corr(final['AIRT'])\n",
    "correlation2 = final['AIRT'].corr(final['SST'])\n",
    "correlation3 = final['PREC'].corr(final['SST'])\n",
    "print(\"Pairwise correlation between PREC and AIRT is: \"+ str(correlation1) + \"\\n\" + \"Pairwise correlation between AIRT and SST is: \" + str(correlation2) + '\\n'+ \"Pairwise correlation between PREC and SST is: \" +  str(correlation3))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "    # A7.2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(final['AIRT'], final['RH'])\n",
    "plt.xlabel('Air Temperature')\n",
    "plt.ylabel('Relative humidity')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# A8"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "    # A8.1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeClassifier(class_weight=None, criterion='entropy', max_depth=None,\n",
       "                       max_features=None, max_leaf_nodes=None,\n",
       "                       min_impurity_decrease=0.0, min_impurity_split=None,\n",
       "                       min_samples_leaf=1, min_samples_split=2,\n",
       "                       min_weight_fraction_leaf=0.0, presort=False,\n",
       "                       random_state=0, splitter='best')"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from matplotlib.colors import ListedColormap\n",
    "from sklearn.metrics import confusion_matrix\n",
    "X = final.iloc[:, [3, 4, 5, 6]].values#Features: Precipitation, Air temperature, Sea surface temperature, Relative humidity\n",
    "y = final.iloc[:, [7]].values# Target: Q\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)\n",
    "sc = StandardScaler()\n",
    "X_train = sc.fit_transform(X_train)\n",
    "X_test = sc.transform(X_test)\n",
    "classifier = DecisionTreeClassifier(criterion = 'entropy', random_state = 0)\n",
    "classifier.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "    # A8.2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[8670,    8],\n",
       "       [   4,    2]])"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred = classifier.predict(X_test)\n",
    "y_pred\n",
    "cm = confusion_matrix(y_test, y_pred)\n",
    "cm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The accuracy of the model is: 0.9986181483187471\n"
     ]
    }
   ],
   "source": [
    "accuracy = (cm[0][0]+cm[1][1])/(cm[0][0]+cm[0][1]+cm[1][0]+cm[1][1])\n",
    "print('The accuracy of the model is: ' + str(accuracy))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# A9.1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "final['Day']=final['YYYYMMDD'].dt.day"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Month</th>\n",
       "      <th>Day</th>\n",
       "      <th>Timestamp</th>\n",
       "      <th>HHMMSS</th>\n",
       "      <th>PREC</th>\n",
       "      <th>AIRT</th>\n",
       "      <th>SST</th>\n",
       "      <th>RH</th>\n",
       "      <th>nDay</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>71.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.750</td>\n",
       "      <td>29.5315</td>\n",
       "      <td>78.80</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>215.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.915</td>\n",
       "      <td>29.6290</td>\n",
       "      <td>80.80</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>359.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>29.175</td>\n",
       "      <td>29.5200</td>\n",
       "      <td>78.60</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>503.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>29.155</td>\n",
       "      <td>29.4485</td>\n",
       "      <td>76.10</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>647.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.010</td>\n",
       "      <td>29.020</td>\n",
       "      <td>29.4835</td>\n",
       "      <td>73.85</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>791.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.010</td>\n",
       "      <td>28.900</td>\n",
       "      <td>29.5250</td>\n",
       "      <td>71.40</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>935.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.015</td>\n",
       "      <td>28.895</td>\n",
       "      <td>29.6660</td>\n",
       "      <td>70.95</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>1079.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.165</td>\n",
       "      <td>29.6745</td>\n",
       "      <td>79.20</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>1223.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.350</td>\n",
       "      <td>29.4610</td>\n",
       "      <td>78.80</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>1366.0</td>\n",
       "      <td>114000.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.390</td>\n",
       "      <td>29.5720</td>\n",
       "      <td>80.60</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>1511.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.960</td>\n",
       "      <td>29.5160</td>\n",
       "      <td>73.95</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>1655.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>29.105</td>\n",
       "      <td>29.4400</td>\n",
       "      <td>76.85</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>1799.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.460</td>\n",
       "      <td>29.4030</td>\n",
       "      <td>82.55</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>1943.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.415</td>\n",
       "      <td>29.3690</td>\n",
       "      <td>84.15</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>2087.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.215</td>\n",
       "      <td>29.3960</td>\n",
       "      <td>82.25</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>2231.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>29.470</td>\n",
       "      <td>29.3305</td>\n",
       "      <td>78.20</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1</td>\n",
       "      <td>17</td>\n",
       "      <td>2375.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>29.215</td>\n",
       "      <td>29.2775</td>\n",
       "      <td>77.50</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>2519.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>29.190</td>\n",
       "      <td>29.2480</td>\n",
       "      <td>79.60</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>2663.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>29.040</td>\n",
       "      <td>29.2220</td>\n",
       "      <td>81.70</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>2807.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>29.055</td>\n",
       "      <td>29.0660</td>\n",
       "      <td>77.55</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "      <td>2951.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.925</td>\n",
       "      <td>29.0775</td>\n",
       "      <td>80.20</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>3095.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.005</td>\n",
       "      <td>28.685</td>\n",
       "      <td>29.0250</td>\n",
       "      <td>78.70</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>1</td>\n",
       "      <td>23</td>\n",
       "      <td>3239.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.660</td>\n",
       "      <td>29.0290</td>\n",
       "      <td>76.20</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>3383.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.600</td>\n",
       "      <td>28.9840</td>\n",
       "      <td>77.90</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>3527.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.810</td>\n",
       "      <td>29.0295</td>\n",
       "      <td>79.10</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>1</td>\n",
       "      <td>26</td>\n",
       "      <td>3671.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.775</td>\n",
       "      <td>28.9705</td>\n",
       "      <td>82.05</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>1</td>\n",
       "      <td>27</td>\n",
       "      <td>3815.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.545</td>\n",
       "      <td>28.9505</td>\n",
       "      <td>83.30</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "      <td>3959.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.365</td>\n",
       "      <td>28.8230</td>\n",
       "      <td>83.70</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>4103.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.550</td>\n",
       "      <td>28.8270</td>\n",
       "      <td>81.90</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>4247.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.240</td>\n",
       "      <td>28.7955</td>\n",
       "      <td>80.20</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>214</th>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>30887.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.800</td>\n",
       "      <td>29.9065</td>\n",
       "      <td>73.85</td>\n",
       "      <td>214</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>215</th>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>31031.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>27.900</td>\n",
       "      <td>29.7010</td>\n",
       "      <td>77.75</td>\n",
       "      <td>215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216</th>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>31175.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>29.070</td>\n",
       "      <td>29.7270</td>\n",
       "      <td>76.90</td>\n",
       "      <td>216</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>217</th>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>31319.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.340</td>\n",
       "      <td>29.8730</td>\n",
       "      <td>79.45</td>\n",
       "      <td>217</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>218</th>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>31463.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.870</td>\n",
       "      <td>29.9755</td>\n",
       "      <td>73.25</td>\n",
       "      <td>218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>219</th>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>31607.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.525</td>\n",
       "      <td>29.9970</td>\n",
       "      <td>77.30</td>\n",
       "      <td>219</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>220</th>\n",
       "      <td>8</td>\n",
       "      <td>9</td>\n",
       "      <td>31751.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.105</td>\n",
       "      <td>29.7930</td>\n",
       "      <td>82.15</td>\n",
       "      <td>220</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>221</th>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>31895.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.950</td>\n",
       "      <td>29.9075</td>\n",
       "      <td>77.60</td>\n",
       "      <td>221</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>222</th>\n",
       "      <td>8</td>\n",
       "      <td>11</td>\n",
       "      <td>32039.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>27.200</td>\n",
       "      <td>29.6655</td>\n",
       "      <td>82.25</td>\n",
       "      <td>222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>223</th>\n",
       "      <td>8</td>\n",
       "      <td>12</td>\n",
       "      <td>32183.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>27.850</td>\n",
       "      <td>29.7320</td>\n",
       "      <td>80.75</td>\n",
       "      <td>223</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>224</th>\n",
       "      <td>8</td>\n",
       "      <td>13</td>\n",
       "      <td>32327.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.710</td>\n",
       "      <td>29.7730</td>\n",
       "      <td>77.50</td>\n",
       "      <td>224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225</th>\n",
       "      <td>8</td>\n",
       "      <td>14</td>\n",
       "      <td>32471.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.920</td>\n",
       "      <td>29.7115</td>\n",
       "      <td>78.20</td>\n",
       "      <td>225</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>226</th>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>32614.5</td>\n",
       "      <td>114500.0</td>\n",
       "      <td>0.100</td>\n",
       "      <td>28.840</td>\n",
       "      <td>29.6060</td>\n",
       "      <td>80.80</td>\n",
       "      <td>226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>227</th>\n",
       "      <td>8</td>\n",
       "      <td>16</td>\n",
       "      <td>32765.0</td>\n",
       "      <td>125000.0</td>\n",
       "      <td>0.080</td>\n",
       "      <td>28.660</td>\n",
       "      <td>29.4890</td>\n",
       "      <td>80.00</td>\n",
       "      <td>227</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>228</th>\n",
       "      <td>8</td>\n",
       "      <td>17</td>\n",
       "      <td>32904.5</td>\n",
       "      <td>120500.0</td>\n",
       "      <td>0.010</td>\n",
       "      <td>28.575</td>\n",
       "      <td>29.7080</td>\n",
       "      <td>81.00</td>\n",
       "      <td>228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>229</th>\n",
       "      <td>8</td>\n",
       "      <td>18</td>\n",
       "      <td>33047.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.755</td>\n",
       "      <td>29.6435</td>\n",
       "      <td>79.50</td>\n",
       "      <td>229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230</th>\n",
       "      <td>8</td>\n",
       "      <td>19</td>\n",
       "      <td>33195.0</td>\n",
       "      <td>123000.0</td>\n",
       "      <td>0.200</td>\n",
       "      <td>27.730</td>\n",
       "      <td>29.6800</td>\n",
       "      <td>84.30</td>\n",
       "      <td>230</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>231</th>\n",
       "      <td>8</td>\n",
       "      <td>20</td>\n",
       "      <td>33344.5</td>\n",
       "      <td>132500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.160</td>\n",
       "      <td>29.4720</td>\n",
       "      <td>79.55</td>\n",
       "      <td>231</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232</th>\n",
       "      <td>8</td>\n",
       "      <td>21</td>\n",
       "      <td>33479.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.720</td>\n",
       "      <td>29.5425</td>\n",
       "      <td>77.85</td>\n",
       "      <td>232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233</th>\n",
       "      <td>8</td>\n",
       "      <td>22</td>\n",
       "      <td>33636.0</td>\n",
       "      <td>140000.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.120</td>\n",
       "      <td>29.4440</td>\n",
       "      <td>78.80</td>\n",
       "      <td>233</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234</th>\n",
       "      <td>8</td>\n",
       "      <td>23</td>\n",
       "      <td>33767.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.845</td>\n",
       "      <td>29.7005</td>\n",
       "      <td>77.30</td>\n",
       "      <td>234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>8</td>\n",
       "      <td>24</td>\n",
       "      <td>33911.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.955</td>\n",
       "      <td>29.6790</td>\n",
       "      <td>78.35</td>\n",
       "      <td>235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>8</td>\n",
       "      <td>25</td>\n",
       "      <td>34055.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.010</td>\n",
       "      <td>27.570</td>\n",
       "      <td>29.7370</td>\n",
       "      <td>83.90</td>\n",
       "      <td>236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>8</td>\n",
       "      <td>26</td>\n",
       "      <td>34199.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.205</td>\n",
       "      <td>26.850</td>\n",
       "      <td>29.1875</td>\n",
       "      <td>86.10</td>\n",
       "      <td>237</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238</th>\n",
       "      <td>8</td>\n",
       "      <td>27</td>\n",
       "      <td>34355.5</td>\n",
       "      <td>137500.0</td>\n",
       "      <td>0.010</td>\n",
       "      <td>27.440</td>\n",
       "      <td>29.0695</td>\n",
       "      <td>75.65</td>\n",
       "      <td>238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>239</th>\n",
       "      <td>8</td>\n",
       "      <td>28</td>\n",
       "      <td>34487.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.725</td>\n",
       "      <td>29.2740</td>\n",
       "      <td>77.00</td>\n",
       "      <td>239</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>240</th>\n",
       "      <td>8</td>\n",
       "      <td>29</td>\n",
       "      <td>34631.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.825</td>\n",
       "      <td>29.6010</td>\n",
       "      <td>75.25</td>\n",
       "      <td>240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>241</th>\n",
       "      <td>8</td>\n",
       "      <td>30</td>\n",
       "      <td>34775.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.380</td>\n",
       "      <td>29.6425</td>\n",
       "      <td>77.40</td>\n",
       "      <td>241</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>8</td>\n",
       "      <td>31</td>\n",
       "      <td>34919.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.815</td>\n",
       "      <td>29.6305</td>\n",
       "      <td>75.60</td>\n",
       "      <td>242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>35063.5</td>\n",
       "      <td>117500.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28.985</td>\n",
       "      <td>29.8220</td>\n",
       "      <td>73.60</td>\n",
       "      <td>243</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>244 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Month  Day  Timestamp    HHMMSS   PREC    AIRT      SST     RH  nDay\n",
       "0        1    1       71.5  117500.0  0.000  28.750  29.5315  78.80     0\n",
       "1        1    2      215.5  117500.0  0.000  28.915  29.6290  80.80     1\n",
       "2        1    3      359.5  117500.0  0.000  29.175  29.5200  78.60     2\n",
       "3        1    4      503.5  117500.0  0.000  29.155  29.4485  76.10     3\n",
       "4        1    5      647.5  117500.0  0.010  29.020  29.4835  73.85     4\n",
       "5        1    6      791.5  117500.0  0.010  28.900  29.5250  71.40     5\n",
       "6        1    7      935.5  117500.0  0.015  28.895  29.6660  70.95     6\n",
       "7        1    8     1079.5  117500.0  0.000  28.165  29.6745  79.20     7\n",
       "8        1    9     1223.5  117500.0  0.000  28.350  29.4610  78.80     8\n",
       "9        1   10     1366.0  114000.0  0.000  28.390  29.5720  80.60     9\n",
       "10       1   11     1511.5  117500.0  0.000  28.960  29.5160  73.95    10\n",
       "11       1   12     1655.5  117500.0  0.000  29.105  29.4400  76.85    11\n",
       "12       1   13     1799.5  117500.0  0.000  28.460  29.4030  82.55    12\n",
       "13       1   14     1943.5  117500.0  0.000  28.415  29.3690  84.15    13\n",
       "14       1   15     2087.5  117500.0  0.000  28.215  29.3960  82.25    14\n",
       "15       1   16     2231.5  117500.0  0.000  29.470  29.3305  78.20    15\n",
       "16       1   17     2375.5  117500.0  0.000  29.215  29.2775  77.50    16\n",
       "17       1   18     2519.5  117500.0  0.000  29.190  29.2480  79.60    17\n",
       "18       1   19     2663.5  117500.0  0.000  29.040  29.2220  81.70    18\n",
       "19       1   20     2807.5  117500.0  0.000  29.055  29.0660  77.55    19\n",
       "20       1   21     2951.5  117500.0  0.000  28.925  29.0775  80.20    20\n",
       "21       1   22     3095.5  117500.0  0.005  28.685  29.0250  78.70    21\n",
       "22       1   23     3239.5  117500.0  0.000  28.660  29.0290  76.20    22\n",
       "23       1   24     3383.5  117500.0  0.000  28.600  28.9840  77.90    23\n",
       "24       1   25     3527.5  117500.0  0.000  28.810  29.0295  79.10    24\n",
       "25       1   26     3671.5  117500.0  0.000  28.775  28.9705  82.05    25\n",
       "26       1   27     3815.5  117500.0  0.000  28.545  28.9505  83.30    26\n",
       "27       1   28     3959.5  117500.0  0.000  28.365  28.8230  83.70    27\n",
       "28       1   29     4103.5  117500.0  0.000  28.550  28.8270  81.90    28\n",
       "29       1   30     4247.5  117500.0  0.000  28.240  28.7955  80.20    29\n",
       "..     ...  ...        ...       ...    ...     ...      ...    ...   ...\n",
       "214      8    3    30887.5  117500.0  0.000  28.800  29.9065  73.85   214\n",
       "215      8    4    31031.5  117500.0  0.000  27.900  29.7010  77.75   215\n",
       "216      8    5    31175.5  117500.0  0.000  29.070  29.7270  76.90   216\n",
       "217      8    6    31319.5  117500.0  0.000  28.340  29.8730  79.45   217\n",
       "218      8    7    31463.5  117500.0  0.000  28.870  29.9755  73.25   218\n",
       "219      8    8    31607.5  117500.0  0.000  28.525  29.9970  77.30   219\n",
       "220      8    9    31751.5  117500.0  0.000  28.105  29.7930  82.15   220\n",
       "221      8   10    31895.5  117500.0  0.000  28.950  29.9075  77.60   221\n",
       "222      8   11    32039.5  117500.0  0.000  27.200  29.6655  82.25   222\n",
       "223      8   12    32183.5  117500.0  0.000  27.850  29.7320  80.75   223\n",
       "224      8   13    32327.5  117500.0  0.000  28.710  29.7730  77.50   224\n",
       "225      8   14    32471.5  117500.0  0.000  28.920  29.7115  78.20   225\n",
       "226      8   15    32614.5  114500.0  0.100  28.840  29.6060  80.80   226\n",
       "227      8   16    32765.0  125000.0  0.080  28.660  29.4890  80.00   227\n",
       "228      8   17    32904.5  120500.0  0.010  28.575  29.7080  81.00   228\n",
       "229      8   18    33047.5  117500.0  0.000  28.755  29.6435  79.50   229\n",
       "230      8   19    33195.0  123000.0  0.200  27.730  29.6800  84.30   230\n",
       "231      8   20    33344.5  132500.0  0.000  28.160  29.4720  79.55   231\n",
       "232      8   21    33479.5  117500.0  0.000  28.720  29.5425  77.85   232\n",
       "233      8   22    33636.0  140000.0  0.000  28.120  29.4440  78.80   233\n",
       "234      8   23    33767.5  117500.0  0.000  28.845  29.7005  77.30   234\n",
       "235      8   24    33911.5  117500.0  0.000  28.955  29.6790  78.35   235\n",
       "236      8   25    34055.5  117500.0  0.010  27.570  29.7370  83.90   236\n",
       "237      8   26    34199.5  117500.0  0.205  26.850  29.1875  86.10   237\n",
       "238      8   27    34355.5  137500.0  0.010  27.440  29.0695  75.65   238\n",
       "239      8   28    34487.5  117500.0  0.000  28.725  29.2740  77.00   239\n",
       "240      8   29    34631.5  117500.0  0.000  28.825  29.6010  75.25   240\n",
       "241      8   30    34775.5  117500.0  0.000  28.380  29.6425  77.40   241\n",
       "242      8   31    34919.5  117500.0  0.000  28.815  29.6305  75.60   242\n",
       "243      9    1    35063.5  117500.0  0.000  28.985  29.8220  73.60   243\n",
       "\n",
       "[244 rows x 9 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "groupByDay = final.groupby(['Month', 'Day']).median() \n",
    "groupByDay = groupByDay.reset_index(level = ['Month', 'Day']) \n",
    "groupByDay['nDay'] = groupByDay.index\n",
    "groupByDay"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "indpVar = groupByDay['nDay']\n",
    "deptVar = groupByDay['RH']\n",
    "TrueX=indpVar[:]\n",
    "TrueY=deptVar[:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 576x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from scipy.stats import linregress\n",
    "slope, intercept, r_value, p_value, std_err = linregress(indpVar,deptVar)\n",
    "line = [slope*xi + intercept for xi in indpVar]\n",
    "fig= plt.figure(figsize=(8,5))\n",
    "plt.plot(indpVar,line,'r-', linewidth=2)\n",
    "plt.scatter(indpVar, deptVar)\n",
    "plt.xlabel('Days')\n",
    "plt.ylabel('Humidity')\n",
    "plt.show() "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "    # A9.4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x121cf9d30>]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as pl\n",
    "import sys\n",
    "import os\n",
    "import numpy\n",
    "# sys.path.append(os.getcwd())\n",
    "import regressiondemo as rd\n",
    "\n",
    "x = []\n",
    "y = []\n",
    "\n",
    "def createX():\n",
    "    for each in indpVar:\n",
    "        x.append(each)\n",
    "    return x\n",
    "\n",
    "def createY():\n",
    "    for each in deptVar:\n",
    "        y.append(each)\n",
    "    return y\n",
    "\n",
    "\n",
    "newX = createX()\n",
    "newY = createY()\n",
    "order = 8\n",
    "xts = rd.makeX(200, uniform = True)\n",
    "rd.makeX(200, uniform = True)\n",
    "\n",
    "\n",
    "pl.ylim(60,100)\n",
    "pl.xlim(-10,270)\n",
    "ys = rd.linReg(newX,newY,xts,order)\n",
    "pl.plot(indpVar, deptVar, 'o') \n",
    "plt.xlabel('Days')\n",
    "plt.ylabel('Humidity')\n",
    "pl.plot(xts, ys,label = 'poly ' + str(order), linewidth=1.25 )  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# A10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0        81.081981\n",
      "1        81.223703\n",
      "2        81.288121\n",
      "3        81.210819\n",
      "4        81.236586\n",
      "5        81.030446\n",
      "6        80.966027\n",
      "7        80.940260\n",
      "8        80.940260\n",
      "9        80.927376\n",
      "10       81.069097\n",
      "11       80.759887\n",
      "12       80.218768\n",
      "13       80.424909\n",
      "14       80.618165\n",
      "15       80.837189\n",
      "16       81.094865\n",
      "17       81.017562\n",
      "18       81.081981\n",
      "19       81.172167\n",
      "20       81.133516\n",
      "21       81.146400\n",
      "22       81.081981\n",
      "23       80.901608\n",
      "24       81.081981\n",
      "25       81.069097\n",
      "26       81.262354\n",
      "27       81.288121\n",
      "28       81.262354\n",
      "29       81.326773\n",
      "           ...    \n",
      "35106    80.991795\n",
      "35107    81.017562\n",
      "35108    81.094865\n",
      "35109    81.223703\n",
      "35110    81.378308\n",
      "35111    81.739054\n",
      "35112    81.777705\n",
      "35113    82.061148\n",
      "35114    81.906543\n",
      "35115    81.739054\n",
      "35116    81.532913\n",
      "35117    81.597332\n",
      "35118    81.996729\n",
      "35119    82.009613\n",
      "35120    81.893659\n",
      "35121    81.932310\n",
      "35122    81.842124\n",
      "35123    81.893659\n",
      "35124    81.855007\n",
      "35125    81.764821\n",
      "35126    81.726170\n",
      "35127    81.816356\n",
      "35128    81.700402\n",
      "35129    81.713286\n",
      "35130    81.816356\n",
      "35131    81.661751\n",
      "35132    81.726170\n",
      "35133    81.597332\n",
      "35134    81.635983\n",
      "35135    81.661751\n",
      "Name: RH, Length: 35136, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "indpVar = report['AIRT']\n",
    "deptVar = report['RH']\n",
    "TrueX=indpVar[:]\n",
    "TrueY=deptVar[:]\n",
    "\n",
    "from scipy.stats import linregress\n",
    "slope, intercept, r_value, p_value, std_err = linregress(indpVar,deptVar)\n",
    "\n",
    "\n",
    "line = [slope*xi + intercept for xi in indpVar]\n",
    "\n",
    "def replace_Rhmissing():\n",
    "    for i in range(len(report['RH'])):\n",
    "        if report['RH'][i] == -9.990000 or report['RH'][i] == -99.900000:\n",
    "            report['RH'][i] = line[i]\n",
    "    return report['RH']\n",
    "print (replace_Rhmissing())\n",
    "    \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# B"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import KMeans\n",
    "cluster_report = pd.read_csv('results.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# B1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'away_score')"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x=cluster_report['home_score'],y=cluster_report['away_score'])\n",
    "plt.xlabel('home_score')\n",
    "plt.ylabel('away_score')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[4.15118046, 0.89917925],\n",
       "       [0.97917339, 1.28017436]])"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans = KMeans(n_clusters=2).fit(cluster_report[['home_score','away_score']])\n",
    "kmeans.cluster_centers_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# B2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x=cluster_report['home_score'],y=cluster_report['away_score'], c=kmeans.labels_)\n",
    "plt.plot(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],'k*',markersize=20)\n",
    "plt.xlabel('home_score')\n",
    "plt.ylabel('away_score')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
